[Unit]
Description=Update Node.js project from Deploy branch
After=network-online.target
Wants=network-online.target
Before=nodehello.service

[Service]
Type=oneshot
WorkingDirectory=/home/jp113/Documentos/node-helloworld/Laboratorio-de-Servicios

# Agregar el directorio como seguro para git (solo primera vez)
ExecStartPre=/usr/bin/sudo -u jp113 /usr/bin/git config --global --add safe.directory /home/jp113/Documentos/node-helloworld/Laboratorio-de-Servicios

# Asegurarse de estar en el branch deploy
ExecStartPre=/usr/bin/sudo -u jp113 /usr/bin/git checkout deploy

# Fetch de los cambios remotos
ExecStartPre=/usr/bin/sudo -u jp113 /usr/bin/git fetch origin deploy

# Comparar commits y actualizar si es necesario
ExecStart=/bin/bash -c '\
    LOCAL=$(/usr/bin/sudo -u jp113 /usr/bin/git rev-parse HEAD); \
    REMOTE=$(/usr/bin/sudo -u jp113 /usr/bin/git rev-parse origin/deploy); \
    echo "Local commit:  $LOCAL"; \
    echo "Remote commit: $REMOTE"; \
    if [ "$LOCAL" != "$REMOTE" ]; then \
        echo "Cambios detectados - Actualizando..."; \
        /usr/bin/systemctl stop nodehello.service || true; \
        /usr/bin/sudo -u jp113 /usr/bin/git reset --hard origin/deploy; \
        /usr/bin/sudo -u jp113 /usr/bin/git pull origin deploy; \
        echo "Repositorio actualizado a: $(/usr/bin/sudo -u jp113 /usr/bin/git rev-parse HEAD)"; \
        /usr/bin/systemctl start nodehello.service; \
        echo "Actualizaci√≥n completada"; \
    else \
        echo "Sin cambios en deploy"; \
        if ! /usr/bin/systemctl is-active --quiet nodehello.service; then \
            echo "Iniciando servicio..."; \
            /usr/bin/systemctl start nodehello.service; \
        fi; \
    fi'

RemainAfterExit=yes
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
